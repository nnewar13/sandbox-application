AWSTemplateFormatVersion: 2010-09-09
Description: Sandbox Application using CloudFormation

Parameters:
  apiGatewayStageName:
    Type: String
    Default: db

Resources:
  CFTSandboxiamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - 
         PolicyName: "cft_sandbox_lambda_policy"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - 
                Effect: "Allow"
                Action: "logs:CreateLogGroup"
                Resource: "arn:aws:logs:us-east-1:600627358874:*"
              -
                Effect: Allow
                Action: 
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:us-east-1:600627358874:/aws/lambda/cft_sandbox_lambda_function:*"

  CFTSandboxLambdaLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
      LogGroupName: /aws/lambda/cft_sandbox_lambda_function

  CFTSandboxLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda Function created using the Cloudformation
      FunctionName: cft_sandbox_lambda
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt 'CFTSandboxiamRole.Arn'
      Runtime: python3.9
      Code: 
        ZipFile: |
          def lambda_handler(event, context):
            return {
                'statusCode': 200,
                'body': 'Lambda created using cloudformation.'
            }
      Tags:
        - Key: Owner
          Value: Nischal Newar
  
  CFTSandboxAPIGatewayAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: "Rest API Gateway created using CloudFormation"
      DisableExecuteApiEndpoint: false
      EndpointConfiguration:
        Types:
          - "REGIONAL"
      Name: "cft_sandbox_apigateway"
      Tags: 
        - Key: "Owner"
          Value: "Nischal Newar"
  
  CFTSandboxAPIGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref CFTSandboxAPIGatewayAPI
      ParentId: !GetAtt CFTSandboxAPIGatewayAPI.RootResourceId
      PathPart: "sandbox_lambda"
    
  CFTSandboxAPIGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: "None"
      HttpMethod: "GET"
      ResourceId: !Ref CFTSandboxAPIGatewayResource
      RestApiId: !Ref CFTSandboxAPIGatewayAPI
      Integration:
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt CFTSandboxLambda.Arn
        IntegrationHttpMethod: POST

  CFTSandboxAPIGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: CFTSandboxAPIGatewayMethod
    Properties:
      RestApiId: !Ref CFTSandboxAPIGatewayAPI
      StageName: !Ref apiGatewayStageName
  
  CFTSandboxLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt CFTSandboxLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGateway}/*
        - apiGateway: !Ref CFTSandboxAPIGatewayAPI

  CFTSandboxDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: "UserID"
          AttributeType: "S"
        - AttributeName: "UserTitle"
          AttributeType: "S"
        - AttributeName: "UserName"
          AttributeType: "S"
        - AttributeName: "Courses"
          AttributeType: "S"
        - AttributeName: "Grade"
          AttributeType: "N"
      BillingMode: "PROVISIONED"
      ContributorInsightsSpecification:
        Enabled: false
      DeletionProtectionEnabled: false
      GlobalSecondaryIndexes: 
        - ContributorInsightsSpecification:
            Enabled: false
          IndexName: "CoursesIndex"
          KeySchema:
            - AttributeName: "Courses"
              KeyType: "hash_key"
            - AttributeName: "Grade"
              KeyType: "range_key"
          Projection:
            NonKeyAttributes:
              - "UserID"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput:
            ReadCapacityUnits: "10"
            WriteCapacityUnits: "10"
      KeySchema: # Required
        - AttributeName: "UserID"
          KeyType: "hash_key"
        - AttributeName: "UserTitle"
          KeyType: "range_key"
      ProvisionedThroughput:
        ReadCapacityUnits: "20"
        WriteCapacityUnits: "20"
      ResourcePolicy:
        PolicyDocument: "JSON"
      Tags: 
        - Key: "Owner"
          Value: "Nischal Newar"


      
      